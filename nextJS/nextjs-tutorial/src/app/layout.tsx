import { Metadata } from 'next';
// import { ErrorWrapper } from './error-wrapper';
// export const metadata = {
// 	title: 'Next.js',
// 	description: 'Generated by Next.js',
// };

export const metadata: Metadata = {
	title: {
		default: 'Next Learning', // This is default or fallback if child component doesn't have title provided.
		template: '%s | Learning', // This will add `| Learning` after title of child component.
		// absolute:               // Use this in child component to override the template provided. Check blog component
	},
	description: 'Generated by Next.js',
};

export default function RootLayout({
	children,
}: {
	children: React.ReactNode;
}) {
	return (
		<html lang='en'>
			<body>
				<header style={{ backgroundColor: 'lightblue', padding: '1rem' }}>
					<p>Header</p>
				</header>
				{/** Uncomment below and see how global errors can be simulated and how global error handling works */}
				{/* <ErrorWrapper>{children}</ErrorWrapper> */}
				{children}
				<footer style={{ backgroundColor: 'ghostwhite', padding: '1rem' }}>
					<p>Footer</p>
				</footer>
			</body>
		</html>
	);
}
